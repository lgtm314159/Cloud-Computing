elb-create-lb demoLB --headers --listener "lb-port=80,instance-port=80,protocol=http" --availability-zones us-east-1a

elb-register-instances-with-lb demoLB --headers --instances <instanceId>

elb-configure-healthcheck demoLB --headers --target "HTTP:80/index.html" --interval 30 --timeout 3 --unhealthy-threshold 2 --healthy-threshold 10

as-create-launch-config demoLC --image-id ami-a6f04fcf --instance-type m1.small

as-create-auto-scaling-group demoASG --launch-configuration demoLC --availability-zones us-east-1a --min-size 0 --max-size 1 --default-cooldown 120 --load-balancers demoLB

as-put-scaling-policy scaleUp --auto-scaling-group demoASG --adjustment=1 --type ChangeInCapacity --cooldown 300

as-put-scaling-policy scaleDown --auto-scaling-group demoASG --adjustment=-1 --type ChangeInCapacity --cooldown 300

mon-put-metric-alarm MyHighCPUAlarm --comparison-operator GreaterThanThreshold --evaluation-periods 1 --metric-name CPUUtilization --namespace "AWS/EC2" --period 60 --statistic Average --threshold 80 --alarm-actions <scaleUp-policy-arn> --dimensions InstanceId=<instance-id-to-be-monitored>

mon-put-metric-alarm MyLowCPUAlarm --comparison-operator LessThanThreshold --evaluation-periods 1 --metric-name CPUUtilization --namespace "AWS/EC2" --period 60 --statistic Average --threshold 50 --alarm-actions <scaleDown-policy-arn> --dimensions InstanceId=<instance-id-to-be-monitored>
